{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","disable","doLogin","configure","enforceActions","App","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bef10a4.chunk.js","sourcesContent":["import {extendObservable} from 'mobx';\r\n\r\n/**\r\n * UserStore\r\n */\r\n\r\nclass UserStore {\r\n    constructor(){\r\n        extendObservable(this, {\r\n\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React from 'react';\r\nimport './App.css';\r\n\r\nclass InputField extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className=\"inputField\">\r\n                \r\n                <input\r\n                    className='input'\r\n                    type = {this.props.type}\r\n                    placeholder = {this.props.placeholder}\r\n                    value = {this.props.value}\r\n                    onChange = { (e) => this.props.onChange(e.target.value) }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nclass SubmitButton extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className=\"submitButton\">\r\n                \r\n                <button\r\n                    className='btn'\r\n                    disabled={this.props.disabled}\r\n                    onClick={ () => this.props.onClick() }\r\n                >\r\n                    {this.props.text}\r\n                </button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton'\r\nimport UserStore from './stores/UserStore'\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();\r\n        if (val.length > 12) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        })\r\n    }\r\n\r\n    async doLogin() {\r\n\r\n        if (!this.state.username) {\r\n            return;\r\n        }\r\n        \r\n        if (!this.state.password) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        try {\r\n\r\n            let res = await fetch('/login', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password,    \r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                UserStore.isLoggedIn = true;\r\n                UserStore.username = result.username;\r\n            }\r\n\r\n            else if (result && result.success === false) {\r\n                this.resetForm();\r\n                alert(result.msg);\r\n            }\r\n\r\n        }\r\n\r\n        catch(e) {\r\n            console.log(e)\r\n            this.resetForm();\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"loginForm\">\r\n                \r\n                Log in\r\n                <InputField\r\n                    type='text'\r\n                    placeholder='Username'\r\n                    value = {this.state.username ? this.state.username : ''}\r\n                    onChange = { (val) => this.setInputValue('username', val)}\r\n                />\r\n                \r\n                <InputField\r\n                    type='pasword'\r\n                    placeholder='Password'\r\n                    value = {this.state.password ? this.state.password : ''}\r\n                    onChange = { (val) => this.setInputValue('password', val)}\r\n                />\r\n\r\n                <SubmitButton\r\n                    text='Login'\r\n                    disable={this.state.buttonDisabled}\r\n                    onClick={ () => this.doLogin() }\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React        from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore    from './stores/UserStore';\nimport LoginForm    from './LoginForm';\nimport SubmitButton from './SubmitButton.js';\nimport { configure } from \"mobx\"\nimport './App.css';\n\nconfigure({\n    enforceActions: \"never\",\n})\n\nclass App extends React.Component {\n\n    // API Calls\n    async componentDidMount(){\n        \n        try {\n\n            let res = await fetch('/isLoggedIn',{\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n\n                }\n            });\n\n            let result = await res.json();\n\n            if(result && result.success) {\n                UserStore.loading = false;\n                UserStore.isLoggedIn = true;\n                UserStore.username = result.username;\n            }\n\n            else{\n                UserStore.loading = false;\n                UserStore.isLoggedIn = false;\n            }\n\n        }\n\n        catch(e){\n            UserStore.loading = false;\n            UserStore.isLoggedIn = false;\n        }\n    }\n\n    async doLogout(){\n        \n        try {\n\n            let res = await fetch('/logout', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n\n                }\n            });\n\n            let result = await res.json();\n\n            if(result && result.success) {\n                UserStore.isLoggedIn = false;\n                UserStore.username = '';\n            }\n\n        }\n\n        catch(e){\n            console.log(e);\n        }\n    }\n\n\n    render(){\n\n        // Render logic\n        if (UserStore.loading) {\n            return (\n                <div className=\"app\">\n                    <div className='container'>\n                        Loading, please wait..\n                    </div> \n                </div> \n            );\n        }\n\n        else {\n\n            if (UserStore.isLoggedIn) {\n                return (\n                    <div className=\"app\">\n                        <div className='container'>\n                            Welcome {UserStore.username}\n                            \n                            <SubmitButton\n                                text={'Log out'}\n                                disable={false}\n                                onClick={ () => this.doLogout() }\n                            />\n\n                        </div> \n                    </div> \n                );\n            }\n\n            return (\n                <div className=\"app\">\n                    <div className=\"container\">\n                        \n                        <LoginForm />\n                    </div> \n                </div> \n            );\n\n        }\n\n    }\n}\n\nexport default observer(App); // The observer is listening for changes in UserStore\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}